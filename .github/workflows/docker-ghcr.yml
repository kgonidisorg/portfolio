name: Split Multi-Arch Build & Push

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build amd64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/kgonidis/portfolio:amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  build-arm64:
    runs-on: [self-hosted, ARM64]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers (arm64)
        uses: actions/cache@v3
        with:
          path: /tmp/buildx-cache
          key: ${{ runner.os }}-buildx-arm64-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-arm64-

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build arm64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ghcr.io/kgonidis/portfolio:arm64
          cache-from: type=local,src=/tmp/buildx-cache
          cache-to: type=local,dest=/tmp/buildx-cache,mode=max
          provenance: false

  merge-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker buildx create --use
          docker manifest create ghcr.io/kgonidis/portfolio:latest \
            --amend ghcr.io/kgonidis/portfolio:amd64 \
            --amend ghcr.io/kgonidis/portfolio:arm64
          docker manifest push ghcr.io/kgonidis/portfolio:latest

  remote-execute:
    runs-on: ubuntu-latest
    needs: merge-manifest

    steps:
      - name: Run pull_portfolio.sh on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }}
            cd /home/${{ secrets.SSH_USER }}
            ./pull_portfolio.sh
